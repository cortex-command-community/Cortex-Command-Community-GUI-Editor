#ifndef _GUIUTIL_
#define _GUIUTIL_

//////////////////////////////////////////////////////////////////////////////////////////
// File:            GUIUtil.h
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     GUIUtil class
// Project:         GUI Library
// Author(s):       Jason Boettcher
//                  jackal@shplorb.com
//                  www.shplorb.com/~jackal


namespace RTE
{


//////////////////////////////////////////////////////////////////////////////////////////
// Class:           GUIUTIL
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     A utility class with misc static functions for different things
// Parent(s):       None.
// Class history:   1/4/2004 GUIUtil Created.

class GUIUtil {

//////////////////////////////////////////////////////////////////////////////////////////
// Public member variable, method and friend function declarations

public:


//////////////////////////////////////////////////////////////////////////////////////////
// Constructor:     GUIUtil
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Constructor method used to instantiate a GUIUtil object in system
//                  memory.
// Arguments:       None.

    GUIUtil() { };


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          TrimString
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Removes the preceeding and ending spaces from a c type string.
// Arguments:       String.

    static char *TrimString(char *String);

    static char* SafeOverlappingStrCpy(char* dst, char* src);

//////////////////////////////////////////////////////////////////////////////////////////
// Method:          GetClipboardText
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Gets the text from the clipboard.
// Arguments:       Pointer to string receiving the text.
// Returns:         Boolean. True if text was available in the clipboard.

    static bool GetClipboardText(std::string *Text);


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          SetClipboardText
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Sets the text in the clipboard.
// Arguments:       String to put into the clipboard.
// Returns:         Boolean. True if text was added to the clipboard.

    static bool SetClipboardText(std::string Text);
};


}; // namespace RTE


#endif  //  _GUIUTIL_
